{"version":3,"sources":["NivoLine.tsx","items.ts","App.tsx","reportWebVitals.js","index.tsx"],"names":["NivoLine","props","data","axisLeft","legendOffset","tickValues","axisBottom","format","xScale","type","precision","useUTC","yScale","min","max","rest","animate","margin","top","right","bottom","left","enablePointLabel","useMesh","enableArea","xFormat","colors","enableGridX","enableGridY","enableCrosshair","curve","marchItems","label","x","y","aprilItems","App","useState","item","setItem","series","id","className","p","onClick","flexDirection","height","tickSize","tickPadding","yFormat","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6fce10d6.chunk.js","sourcesContent":["import { ResponsiveLine, LineSvgProps } from \"@nivo/line\";\n\nexport type NivoLineProps = {\n  data: any;\n} & LineSvgProps;\n\nconst NivoLine = (props: NivoLineProps) => {\n  const {\n    data,\n    axisLeft = {\n      legendOffset: 12,\n      tickValues: 7,\n    },\n    axisBottom = {\n      format: \"%b %d\",\n    },\n    xScale = {\n      type: \"time\",\n      format: \"%Y-%m-%d\",\n      precision: \"day\",\n      useUTC: false,\n    },\n    yScale = {\n      type: \"linear\",\n      min: 0,\n      max: \"auto\",\n    },\n    ...rest\n  } = props;\n\n  const colors = [\"#4AB7A8\", \"#4AB7A8\"];\n\n  return (\n    <ResponsiveLine\n      data={data}\n      animate={false}\n      margin={{ top: 20, right: 10, bottom: 30, left: 50 }}\n      enablePointLabel={false}\n      useMesh={true}\n      enableArea={true}\n      xScale={xScale}\n      xFormat=\"time:%Y-%m-%d\"\n      yScale={yScale}\n      axisLeft={axisLeft}\n      axisBottom={axisBottom}\n      colors={colors}\n      enableGridX={false}\n      enableGridY={false}\n      enableCrosshair={false}\n      curve=\"monotoneX\"\n      {...rest}\n    />\n  );\n};\n\nexport default NivoLine;\n","export const marchItems = {\n  label: \"March\",\n  data: [\n    {\n      x: \"2021-03-01\",\n      y: 10,\n    },\n    {\n      x: \"2021-03-02\",\n      y: 0,\n    },\n    {\n      x: \"2021-03-03\",\n      y: 2,\n    },\n    {\n      x: \"2021-03-04\",\n      y: 0,\n    },\n    {\n      x: \"2021-03-05\",\n      y: 0,\n    },\n    {\n      x: \"2021-03-06\",\n      y: 0,\n    },\n    {\n      x: \"2021-03-07\",\n      y: 0,\n    },\n    {\n      x: \"2021-03-08\",\n      y: 5,\n    },\n    {\n      x: \"2021-03-09\",\n      y: 0,\n    },\n    {\n      x: \"2021-03-10\",\n      y: 0,\n    },\n    {\n      x: \"2021-03-11\",\n      y: 0,\n    },\n    {\n      x: \"2021-03-12\",\n      y: 0,\n    },\n    {\n      x: \"2021-03-13\",\n      y: 0,\n    },\n    {\n      x: \"2021-03-14\",\n      y: 0,\n    },\n    {\n      x: \"2021-03-15\",\n      y: 10,\n    },\n    {\n      x: \"2021-03-16\",\n      y: 0,\n    },\n    {\n      x: \"2021-03-17\",\n      y: 0,\n    },\n    {\n      x: \"2021-03-18\",\n      y: 0,\n    },\n    {\n      x: \"2021-03-19\",\n      y: 0,\n    },\n    {\n      x: \"2021-03-20\",\n      y: 0,\n    },\n    {\n      x: \"2021-03-21\",\n      y: 0,\n    },\n    {\n      x: \"2021-03-22\",\n      y: 0,\n    },\n    {\n      x: \"2021-03-23\",\n      y: 0,\n    },\n    {\n      x: \"2021-03-24\",\n      y: 0,\n    },\n    {\n      x: \"2021-03-25\",\n      y: 0,\n    },\n    {\n      x: \"2021-03-26\",\n      y: 0,\n    },\n    {\n      x: \"2021-03-27\",\n      y: 0,\n    },\n    {\n      x: \"2021-03-28\",\n      y: 0,\n    },\n    {\n      x: \"2021-03-29\",\n      y: 0,\n    },\n    {\n      x: \"2021-03-30\",\n      y: 0,\n    },\n    {\n      x: \"2021-03-31\",\n      y: 0,\n    },\n  ],\n};\nexport const aprilItems = {\n  label: \"April\",\n  data: [\n    {\n      x: \"2021-04-02\",\n      y: 0,\n    },\n    {\n      x: \"2021-04-03\",\n      y: 0,\n    },\n    {\n      x: \"2021-04-04\",\n      y: 0,\n    },\n    {\n      x: \"2021-04-05\",\n      y: 0,\n    },\n    {\n      x: \"2021-04-06\",\n      y: 0,\n    },\n    {\n      x: \"2021-04-07\",\n      y: 0,\n    },\n    {\n      x: \"2021-04-08\",\n      y: 0,\n    },\n    {\n      x: \"2021-04-09\",\n      y: 0,\n    },\n    {\n      x: \"2021-04-10\",\n      y: 0,\n    },\n    {\n      x: \"2021-04-11\",\n      y: 0,\n    },\n    {\n      x: \"2021-04-12\",\n      y: 0,\n    },\n    {\n      x: \"2021-04-13\",\n      y: 0,\n    },\n    {\n      x: \"2021-04-14\",\n      y: 0,\n    },\n    {\n      x: \"2021-04-15\",\n      y: 0,\n    },\n    {\n      x: \"2021-04-16\",\n      y: 0,\n    },\n    {\n      x: \"2021-04-17\",\n      y: 0,\n    },\n    {\n      x: \"2021-04-18\",\n      y: 0,\n    },\n    {\n      x: \"2021-04-19\",\n      y: 1,\n    },\n    {\n      x: \"2021-04-20\",\n      y: 0,\n    },\n    {\n      x: \"2021-04-21\",\n      y: 2,\n    },\n    {\n      x: \"2021-04-22\",\n      y: 0,\n    },\n    {\n      x: \"2021-04-23\",\n      y: 4,\n    },\n    {\n      x: \"2021-04-24\",\n      y: 0,\n    },\n    {\n      x: \"2021-04-25\",\n      y: 0,\n    },\n    {\n      x: \"2021-04-26\",\n      y: 2,\n    },\n    {\n      x: \"2021-04-27\",\n      y: 1,\n    },\n  ],\n};\n","import NivoLine from \"./NivoLine\";\nimport { aprilItems, marchItems } from \"./items\";\nimport { useState } from \"react\";\n\nimport { Flex, Text } from \"rebass\";\n\nconst App = () => {\n  const [item, setItem] = useState(aprilItems);\n\n  const series = [\n    {\n      id: `charges`,\n      data: item.data,\n    },\n  ];\n\n  const axisBottom = {\n    format: \"%d/%m\",\n    tickSize: 0,\n    tickPadding: 10,\n    tickValues: 7,\n  };\n\n  const yFormat = (value: string) => `${value}`;\n  const xFormat = \"time:%d de %B\";\n\n  return (\n    <div className={\"flex\"}>\n      <Flex p=\"10px\">\n        <button onClick={() => setItem(marchItems)}>show march data</button>\n        <button onClick={() => setItem(aprilItems)}>show april data</button>\n      </Flex>\n\n      <Flex p=\"10px\" flexDirection={\"column\"}>\n        <Text>is showing {item.label}</Text>\n        <Flex height={\"300px\"}>\n          <NivoLine\n            data={series}\n            axisBottom={axisBottom}\n            yFormat={yFormat}\n            xFormat={xFormat}\n          />\n        </Flex>\n      </Flex>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}